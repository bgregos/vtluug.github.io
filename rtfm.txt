This document describes how to build the infrastructure from scratch, as well manage it in general. 

'SCRIPTS' refers to the scripts repo, found at https://github.com/vtluug/scripts
'ANSIBLE' refers to the ansible repo, found at https://github.com/vtluug/ansible

For ansible:
- Install it
- Install any additional packages in the ansible readme


Table of Contents
0. Summary
1. Installation
2. Networking
3. Configuration

Summary
======
NFS Configuration:
- All hosts:
    - 755 root:root         /home               10.98.0.7:/cistern/nfs/home
    - 755 root:root         /nfs
    - 755 root:root         /nfs/tank
    - 775 nobody:users      /nfs/tank/share     10.98.0.6:/tank/nfs/share
    - 777 root:root         /nfs/tank/scratch   10.98.0.6:/tank/nfs/scratch
    - 755 root:root         /nfs/cistern
    - 775 nobody:users      /nfs/cistern/share  10.98.0.7:/cistern/nfs/share
    - 755 www-data:www-data /nfs/cistern/files  10.98.0.7:/cistern/nfs/files
    - 755 root:root         /nfs/keg
    - 775 nobody:users      /nfs/keg/share      10.98.0.8:/keg/nfs/share
- Libvirt hosts only (meltdown, spectre):
    - 755 root:root         /nfs/cistern/libvirt
    - 755 root:root         /nfs/cistern/libvirt/images 10.98.0.7:/cistern/nfs/libvirt/images
    - 755 root:root         /nfs/cistern/libvirt/images/meltdown (meltdown ONLY)
    - 755 root:root         /nfs/cistern/libvirt/images/spectre  (spectre ONLY)
    - 755 root:root         /nfs/cistern/libvirt/isos   10.98.0.7:/cistern/nfs/libvirt/isos
- Sczi only:
    - 755 root:root /nfs/cistern/srv 10.98.0.7:/cistern/nfs/srv



Installation (Baremetal)
========================

All hosts
- Create the papatux user with the password in the vtluug-admin repo
    - This is used as a general admin account

If any hosts are installed without internet connection, make sure you install & enable ssh, and install python once internet works.

More configuration will be done in the 'Configuration' section after Networking



Networking
==========
- IPs and MACs of hosts are listed in scripts/router/lan/local_hosts
- Hosts get IPv4 address assigned using DHCP based on MAC, and IPv6 are assigned using SLAAC
- Set up physical boxes based on architecture_diagram.png TODO
- In ansible/hosts.cfg, set the 'mac' and 'interface' for to set up bridging
    - At time of writing, the mac option doesn't work (explained more below)


Router (Debian)
---------------

Configure IP addresses
- Copy SCRIPTS/router/ip-config/interfaces into /etc/network/interfaces

Configure ARP Proxying
- Copy SCRIPTS/router/proxy/arp_proxy.sh into /usr/local/bin/
- Copy SCRIPTS/router/proxy/arp_proxy.service into /etc/systemd/system
- Start and enable arp_proxy.service

Configure dnsmasq (DHCP/SLAAC/DNS) & resolv.conf
- Install dnsmasq
- Copy SCRIPTS/router/lan/dnsmasq.conf into /etc/dnsmasq.conf
- Copy SCRIPTS/router/lan/local_hosts into /usr/local/bin
- Copy SCRIPTS/router/lan/resolv.conf into /etc/resolv.conf
- Start and enable dnsmasq.service

Configure iptables (NAT/Firewall)
- Install iptables
- Copy SCRIPTS/router/lan/vtluug_iptables.sh into /usr/local/bin
- Copy SCRIPTS/router/lan/vtluug_iptables.service into /etc/systemd/system
- Start and enable vtluug_iptables.service


Libvirt hosts (Ubuntu via netplan)
----------------------------------

- Configure the bridge interface
    - Copy SCRIPTS/libvirt-hosts/ip-config/01-netcfg.yaml to /etc/netplan/01-netcfg.yaml
    - Change $INTERFACE to the interface being bridged
    - Run 'netplan apply'
    - In SCRIPTS/router/lan/dnsmasq.conf add the new MACs to their respective dhcp-host lines
    - Update dnsmasq on joey & apply changes
    - Restart networking on the libvirt hosts

Configuration
=============

These steps MUST be done in order. YMMV otherwise.

At this point, all bare metal hosts should have an admin user created, so root ssh will be disabled in the following step

NFS
To build each zfs pool, first look up the device ids in /dev/disk/by-id since these are guaranteed to not change (unlike /dev/sdX)
- Install 'zfsutils-linux'
- Cyberdelia - 7 1TB drives in a raidz3 zfs pool named 'tank'
    - Similarly, run 'zpool create -f -o ashift=12 keg raidz2 <disk_1_id> <disk_2_id> ... <disk_7_id>
- Dirtycow - 8 2TB drives in a raidz3 pool named 'cistern'
    - Similarly, run 'zpool create -f -o ashift=12 keg raidz2 <disk_1_id> <disk_2_id> ... <disk_8_id>
- Shellshock - 3 500GB drives in a raidz2 zfs pool named 'keg'
    - Run 'zpool create -f -o ashift=12 keg raidz1 <disk_1_id> <disk_2_id> <disk_3_id>
- Run 'zfs create <directory>' accoring to the 'NFS Configuration' section in the beginning of the document.

Baremetal Hosts
- Make sure you've copied your ssh key to all the baremetal servers so ansible works
- Run 'ansible-playbook main.yml -i hosts.cfg -K -u papatux --limit=baremetal'
    - Configures most things for us

Create the VMs
- Run 'ansible-playbook deploy.yml -i hosts.cfg -u papatux -k -K'

- Configuring FreeIPA Server
    - First run 'ansible-playbook main.yml -i hosts.cfg -u papatux -k K --limit=chimera.private.vtluug.org' to install all the required packages
    - Reboot chimera, since some tasks require a reboot to take effect
    - The configuration is not automated because it is only done once, and you should be aware of how it's configured
    - ssh into chimera,
    - Run 'ipa-server-install' (as root)
    - Use these options:
        - Do you want to configure integrated DNS (BIND)? [no]: yes
        - Server host name: chimera.private.vtluug.org
        - Domain name: krb.vtluug.org
        - Realm name: KRB.VTLUUG.ORG
        - Directory Manager PW: see accounts file in gitolite-admin
        - admin PW: See accounts file in gitolite-admin
        - Configure DNS forwarders: yes
        - Search for missing reverse zones: yes
        - Continue to configure system with these values: yes
    - Run 'kinit admin' to authenticate as admin
    - Create 'users' and 'officers' groups and change the default shell
        - 'ipa group-add users --desc "All VTLUUG members"'
        - 'ipa group-add officers --desc "VTLUUG officers"'
        - 'ipa config-mod --defaultgroup users'
        - 'ipa config-mod --defaultshell=/bin/bash'

Configure NFS for freeipa login
    - Since FreeIPA didn't exist when we configured NFS, you need to do a bit of config
    - Run 'ipa-client-install -U --domain=krb.vtluug.org --server=chimera.private.vtluug.org --principal=admin --password=$FREEIPA_ADMIN_PASSWORD

Configure the new VMs
- Run 'ansible-playbook main.yml -i hosts.cfg -u papatux -k -K --limit=vms'
    - This mostly configures all the new hosts
